import axios from "axios";

const createClient = () => {
  const token = localStorage.getItem("access_token");

  return axios.create({
    baseURL: "https://api.spotify.com/v1",
    headers: { Authorization: `Bearer ${token}` },
  });
};

const getUserProfile = async (): Promise<any> => {
  const response = await createClient().get("/me");
  return response.data;
};

export const getPlaylists = async (): Promise<any[]> => {
  const response = await createClient().get("/me/playlists");
  return response.data.items;
};

export const searchTracks = async (searchQuery: string): Promise<any[]> => {
  const response = await createClient().get(
    `/search?q=${searchQuery}&type=track&limit=5`
  );
  return response.data.tracks.items;
};

export const addTrackToPlaylist = async (
  playlistId: string,
  trackUris: string[]
): Promise<void> => {
  await createClient().post(`/playlists/${playlistId}/tracks`, {
    uris: trackUris,
  });
};

export const createPlaylist = async (name: string): Promise<any> => {
  const user = await getUserProfile();

  const response = await createClient().post(`/users/${user.id}/playlists`, {
    name,
    description: "Playlist generated by JSR.Live import",
    public: false,
  });
  return response.data.id;
};

export const getSpotifyPlayLists = async () => {
  const playlists = await getPlaylists();
  console.log(playlists);
  const playlistArray: string[] = [];
  playlists.forEach((playlist) => playlistArray.push(playlist.name));
  return playlistArray;
};
